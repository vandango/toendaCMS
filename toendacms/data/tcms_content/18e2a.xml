<?xml version="1.0" encoding="UTF-8"?><main>
	<title>czo3OiJMaWNlbmNlIjs=</title>
	<key>czo0MjoidG9lbmRhQ01TICZhbXA7IEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIjs=</key>
	<content00>s:40141:"&lt;h3 style__________&quot;text-align: center;&quot;&gt;GNU GENERAL PUBLIC LICENSE&lt;/h3&gt;
&lt;p style__________&quot;text-align: center;&quot;&gt;Version 3, 29 June 2007&lt;/p&gt;
&lt;p&gt;Copyright &amp;copy; 2007 Free Software Foundation, Inc.&lt;/p&gt;
&lt;p&gt;Everyone is permitted to copy and distribute verbatim copies
		 of this license document, but changing it is not allowed.&lt;/p&gt;
&lt;h3&gt;Preamble&lt;/h3&gt;
(\&#039;\&#039;here in WikiSyntax\&#039;\&#039;)
* copyright the software, and
* offer you this license which gives you legal permission to copy, distribute and/or modify the software.
&lt;p&gt;The GNU General Public License is a free, copyleft license for
		software and other kinds of works.&lt;/p&gt;
&lt;p&gt;&lt;a href__________&quot;http://localhost/toendacms_svn/toendacms/data/images/Image/osi-certified-120x100.png&quot; rel__________&quot;lightbox&quot;&gt;&lt;img alt__________&quot;osi-certified-120x100&quot; src__________&quot;http://localhost/toendacms_svn/toendacms/data/images/Image/osi-certified-120x100.png&quot; style__________&quot;float: left; margin-top: 2px; margin-bottom: 2px; margin-left: 5px; margin-right: 5px;&quot; title__________&quot;osi-certified-120x100&quot; /&gt;&lt;/a&gt;The licenses for most software and other practical works are designed
		to take away your freedom to share and change the works.  By contrast,
		the GNU General Public License is intended to guarantee your freedom to
		share and change all versions of a program--to make sure it remains free
		software for all its users.  We, the Free Software Foundation, use the
		GNU General Public License for most of our software; it applies also to
		any other work released this way by its authors.  You can apply it to
		your programs, too.&lt;/p&gt;
&lt;p&gt;When we speak of free software, we are referring to freedom, not
		price.  Our General Public Licenses are designed to make sure that you
		have the freedom to distribute copies of free software (and charge for
		them if you wish), that you receive source code or can get it if you
		want it, that you can change the software or use pieces of it in new
		free programs, and that you know you can do these things.&lt;/p&gt;
&lt;p&gt;To protect your rights, we need to prevent others from denying you
		these rights or asking you to surrender the rights.  Therefore, you have
		certain responsibilities if you distribute copies of the software, or if
		you modify it: responsibilities to respect the freedom of others.&lt;/p&gt;
&lt;p&gt;For example, if you distribute copies of such a program, whether
		gratis or for a fee, you must pass on to the recipients the same
		freedoms that you received.  You must make sure that they, too, receive
		or can get the source code.  And you must show them these terms so they
		know their rights.&lt;/p&gt;
&lt;p&gt;Developers that use the GNU GPL protect your rights with two steps:
		(1) assert copyright on the software, and (2) offer you this License
		giving you legal permission to copy, distribute and/or modify it.&lt;/p&gt;
&lt;p&gt;For the developers\&#039; and authors\&#039; protection, the GPL clearly explains
		that there is no warranty for this free software.  For both users\&#039; and
		authors\&#039; sake, the GPL requires that modified versions be marked as
		changed, so that their problems will not be attributed erroneously to
		authors of previous versions.&lt;/p&gt;
&lt;p&gt;Some devices are designed to deny users access to install or run
		modified versions of the software inside them, although the manufacturer
		can do so.  This is fundamentally incompatible with the aim of
		protecting users\&#039; freedom to change the software.  The systematic
		pattern of such abuse occurs in the area of products for individuals to
		use, which is precisely where it is most unacceptable.  Therefore, we
		have designed this version of the GPL to prohibit the practice for those
		products.  If such problems arise substantially in other domains, we
		stand ready to extend this provision to those domains in future versions
		of the GPL, as needed to protect the freedom of users.&lt;/p&gt;
&lt;p&gt;Finally, every program is threatened constantly by software patents.
		States should not allow patents to restrict development and use of
		software on general-purpose computers, but in those that do, we wish to
		avoid the special danger that patents applied to a free program could
		make it effectively proprietary.  To prevent this, the GPL assures that
		patents cannot be used to render the program non-free.&lt;/p&gt;
&lt;p&gt;The precise terms and conditions for copying, distribution and
		modification follow.&lt;/p&gt;
&lt;h3&gt;TERMS AND CONDITIONS&lt;/h3&gt;
&lt;h4&gt;0. Definitions.&lt;/h4&gt;
&lt;p&gt;&amp;ldquo;This License&amp;rdquo; refers to version 3 of the GNU General Public License.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Copyright&amp;rdquo; also means copyright-like laws that apply to other kinds of
		works, such as semiconductor masks.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;The Program&amp;rdquo; refers to any copyrightable work licensed under this
		License.  Each licensee is addressed as &amp;ldquo;you&amp;rdquo;.  &amp;ldquo;Licensees&amp;rdquo; and
		&amp;ldquo;recipients&amp;rdquo; may be individuals or organizations.&lt;/p&gt;
&lt;p&gt;To &amp;ldquo;modify&amp;rdquo; a work means to copy from or adapt all or part of the work
		in a fashion requiring copyright permission, other than the making of an
		exact copy.  The resulting work is called a &amp;ldquo;modified version&amp;rdquo; of the
		earlier work or a work &amp;ldquo;based on&amp;rdquo; the earlier work.&lt;/p&gt;
&lt;p&gt;A &amp;ldquo;covered work&amp;rdquo; means either the unmodified Program or a work based
		on the Program.&lt;/p&gt;
&lt;p&gt;To &amp;ldquo;propagate&amp;rdquo; a work means to do anything with it that, without
		permission, would make you directly or secondarily liable for
		infringement under applicable copyright law, except executing it on a
		computer or modifying a private copy.  Propagation includes copying,
		distribution (with or without modification), making available to the
		public, and in some countries other activities as well.&lt;/p&gt;
&lt;p&gt;To &amp;ldquo;convey&amp;rdquo; a work means any kind of propagation that enables other
		parties to make or receive copies.  Mere interaction with a user through
		a computer network, with no transfer of a copy, is not conveying.&lt;/p&gt;
&lt;p&gt;An interactive user interface displays &amp;ldquo;Appropriate Legal Notices&amp;rdquo;
		to the extent that it includes a convenient and prominently visible
		feature that (1) displays an appropriate copyright notice, and (2)
		tells the user that there is no warranty for the work (except to the
		extent that warranties are provided), that licensees may convey the
		work under this License, and how to view a copy of this License.  If
		the interface presents a list of user commands or options, such as a
		menu, a prominent item in the list meets this criterion.&lt;/p&gt;
&lt;h4&gt;1. Source Code.&lt;/h4&gt;
&lt;p&gt;The &amp;ldquo;source code&amp;rdquo; for a work means the preferred form of the work
		for making modifications to it.  &amp;ldquo;Object code&amp;rdquo; means any non-source
		form of a work.&lt;/p&gt;
&lt;p&gt;A &amp;ldquo;Standard Interface&amp;rdquo; means an interface that either is an official
		standard defined by a recognized standards body, or, in the case of
		interfaces specified for a particular programming language, one that
		is widely used among developers working in that language.&lt;/p&gt;
&lt;p&gt;The &amp;ldquo;System Libraries&amp;rdquo; of an executable work include anything, other
		than the work as a whole, that (a) is included in the normal form of
		packaging a Major Component, but which is not part of that Major
		Component, and (b) serves only to enable use of the work with that
		Major Component, or to implement a Standard Interface for which an
		implementation is available to the public in source code form.  A
		&amp;ldquo;Major Component&amp;rdquo;, in this context, means a major essential component
		(kernel, window system, and so on) of the specific operating system
		(if any) on which the executable work runs, or a compiler used to
		produce the work, or an object code interpreter used to run it.&lt;/p&gt;
&lt;p&gt;The &amp;ldquo;Corresponding Source&amp;rdquo; for a work in object code form means all
		the source code needed to generate, install, and (for an executable
		work) run the object code and to modify the work, including scripts to
		control those activities.  However, it does not include the work\&#039;s
		System Libraries, or general-purpose tools or generally available free
		programs which are used unmodified in performing those activities but
		which are not part of the work.  For example, Corresponding Source
		includes interface definition files associated with source files for
		the work, and the source code for shared libraries and dynamically
		linked subprograms that the work is specifically designed to require,
		such as by intimate data communication or control flow between those
		subprograms and other parts of the work.&lt;/p&gt;
&lt;p&gt;The Corresponding Source need not include anything that users
		can regenerate automatically from other parts of the Corresponding
		Source.&lt;/p&gt;
&lt;p&gt;The Corresponding Source for a work in source code form is that
		same work.&lt;/p&gt;
&lt;h4&gt;2. Basic Permissions.&lt;/h4&gt;
&lt;p&gt;All rights granted under this License are granted for the term of
		copyright on the Program, and are irrevocable provided the stated
		conditions are met.  This License explicitly affirms your unlimited
		permission to run the unmodified Program.  The output from running a
		covered work is covered by this License only if the output, given its
		content, constitutes a covered work.  This License acknowledges your
		rights of fair use or other equivalent, as provided by copyright law.&lt;/p&gt;
&lt;p&gt;You may make, run and propagate covered works that you do not
		convey, without conditions so long as your license otherwise remains
		in force.  You may convey covered works to others for the sole purpose
		of having them make modifications exclusively for you, or provide you
		with facilities for running those works, provided that you comply with
		the terms of this License in conveying all material for which you do
		not control copyright.  Those thus making or running the covered works
		for you must do so exclusively on your behalf, under your direction
		and control, on terms that prohibit them from making any copies of
		your copyrighted material outside their relationship with you.&lt;/p&gt;
&lt;p&gt;Conveying under any other circumstances is permitted solely under
		the conditions stated below.  Sublicensing is not allowed; section 10
		makes it unnecessary.&lt;/p&gt;
&lt;h4&gt;3. Protecting Users\&#039; Legal Rights From Anti-Circumvention Law.&lt;/h4&gt;
&lt;p&gt;No covered work shall be deemed part of an effective technological
		measure under any applicable law fulfilling obligations under article
		11 of the WIPO copyright treaty adopted on 20 December 1996, or
		similar laws prohibiting or restricting circumvention of such
		measures.&lt;/p&gt;
&lt;p&gt;When you convey a covered work, you waive any legal power to forbid
		circumvention of technological measures to the extent such circumvention
		is effected by exercising rights under this License with respect to
		the covered work, and you disclaim any intention to limit operation or
		modification of the work as a means of enforcing, against the work\&#039;s
		users, your or third parties\&#039; legal rights to forbid circumvention of
		technological measures.&lt;/p&gt;
&lt;h4&gt;4. Conveying Verbatim Copies.&lt;/h4&gt;
&lt;p&gt;You may convey verbatim copies of the Program\&#039;s source code as you
		receive it, in any medium, provided that you conspicuously and
		appropriately publish on each copy an appropriate copyright notice;
		keep intact all notices stating that this License and any
		non-permissive terms added in accord with section 7 apply to the code;
		keep intact all notices of the absence of any warranty; and give all
		recipients a copy of this License along with the Program.&lt;/p&gt;
&lt;p&gt;You may charge any price or no price for each copy that you convey,
		and you may offer support or warranty protection for a fee.&lt;/p&gt;
&lt;h4&gt;5. Conveying Modified Source Versions.&lt;/h4&gt;
&lt;p&gt;You may convey a work based on the Program, or the modifications to
		produce it from the Program, in the form of source code under the
		terms of section 4, provided that you also meet all of these conditions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a) The work must carry prominent notices stating that you modified
		    it, and giving a relevant date.&lt;/li&gt;
&lt;li&gt;b) The work must carry prominent notices stating that it is
		    released under this License and any conditions added under section
		    7.  This requirement modifies the requirement in section 4 to
		    &amp;ldquo;keep intact all notices&amp;rdquo;.&lt;/li&gt;
&lt;li&gt;c) You must license the entire work, as a whole, under this
		    License to anyone who comes into possession of a copy.  This
		    License will therefore apply, along with any applicable section 7
		    additional terms, to the whole of the work, and all its parts,
		    regardless of how they are packaged.  This License gives no
		    permission to license the work in any other way, but it does not
		    invalidate such permission if you have separately received it.&lt;/li&gt;
&lt;li&gt;d) If the work has interactive user interfaces, each must display
		    Appropriate Legal Notices; however, if the Program has interactive
		    interfaces that do not display Appropriate Legal Notices, your
		    work need not make them do so.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A compilation of a covered work with other separate and independent
		works, which are not by their nature extensions of the covered work,
		and which are not combined with it such as to form a larger program,
		in or on a volume of a storage or distribution medium, is called an
		&amp;ldquo;aggregate&amp;rdquo; if the compilation and its resulting copyright are not
		used to limit the access or legal rights of the compilation\&#039;s users
		beyond what the individual works permit.  Inclusion of a covered work
		in an aggregate does not cause this License to apply to the other
		parts of the aggregate.&lt;/p&gt;
&lt;h4&gt;6. Conveying Non-Source Forms.&lt;/h4&gt;
&lt;p&gt;You may convey a covered work in object code form under the terms
		of sections 4 and 5, provided that you also convey the
		machine-readable Corresponding Source under the terms of this License,
		in one of these ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a) Convey the object code in, or embodied in, a physical product
		    (including a physical distribution medium), accompanied by the
		    Corresponding Source fixed on a durable physical medium
		    customarily used for software interchange.&lt;/li&gt;
&lt;li&gt;b) Convey the object code in, or embodied in, a physical product
		    (including a physical distribution medium), accompanied by a
		    written offer, valid for at least three years and valid for as
		    long as you offer spare parts or customer support for that product
		    model, to give anyone who possesses the object code either (1) a
		    copy of the Corresponding Source for all the software in the
		    product that is covered by this License, on a durable physical
		    medium customarily used for software interchange, for a price no
		    more than your reasonable cost of physically performing this
		    conveying of source, or (2) access to copy the
		    Corresponding Source from a network server at no charge.&lt;/li&gt;
&lt;li&gt;c) Convey individual copies of the object code with a copy of the
		    written offer to provide the Corresponding Source.  This
		    alternative is allowed only occasionally and noncommercially, and
		    only if you received the object code with such an offer, in accord
		    with subsection 6b.&lt;/li&gt;
&lt;li&gt;d) Convey the object code by offering access from a designated
		    place (gratis or for a charge), and offer equivalent access to the
		    Corresponding Source in the same way through the same place at no
		    further charge.  You need not require recipients to copy the
		    Corresponding Source along with the object code.  If the place to
		    copy the object code is a network server, the Corresponding Source
		    may be on a different server (operated by you or a third party)
		    that supports equivalent copying facilities, provided you maintain
		    clear directions next to the object code saying where to find the
		    Corresponding Source.  Regardless of what server hosts the
		    Corresponding Source, you remain obligated to ensure that it is
		    available for as long as needed to satisfy these requirements.&lt;/li&gt;
&lt;li&gt;e) Convey the object code using peer-to-peer transmission, provided
		    you inform other peers where the object code and Corresponding
		    Source of the work are being offered to the general public at no
		    charge under subsection 6d.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A separable portion of the object code, whose source code is excluded
		from the Corresponding Source as a System Library, need not be
		included in conveying the object code work.&lt;/p&gt;
&lt;p&gt;A &amp;ldquo;User Product&amp;rdquo; is either (1) a &amp;ldquo;consumer product&amp;rdquo;, which means any
		tangible personal property which is normally used for personal, family,
		or household purposes, or (2) anything designed or sold for incorporation
		into a dwelling.  In determining whether a product is a consumer product,
		doubtful cases shall be resolved in favor of coverage.  For a particular
		product received by a particular user, &amp;ldquo;normally used&amp;rdquo; refers to a
		typical or common use of that class of product, regardless of the status
		of the particular user or of the way in which the particular user
		actually uses, or expects or is expected to use, the product.  A product
		is a consumer product regardless of whether the product has substantial
		commercial, industrial or non-consumer uses, unless such uses represent
		the only significant mode of use of the product.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Installation Information&amp;rdquo; for a User Product means any methods,
		procedures, authorization keys, or other information required to install
		and execute modified versions of a covered work in that User Product from
		a modified version of its Corresponding Source.  The information must
		suffice to ensure that the continued functioning of the modified object
		code is in no case prevented or interfered with solely because
		modification has been made.&lt;/p&gt;
&lt;p&gt;If you convey an object code work under this section in, or with, or
		specifically for use in, a User Product, and the conveying occurs as
		part of a transaction in which the right of possession and use of the
		User Product is transferred to the recipient in perpetuity or for a
		fixed term (regardless of how the transaction is characterized), the
		Corresponding Source conveyed under this section must be accompanied
		by the Installation Information.  But this requirement does not apply
		if neither you nor any third party retains the ability to install
		modified object code on the User Product (for example, the work has
		been installed in ROM).&lt;/p&gt;
{tcms_more}
&lt;p&gt;The requirement to provide Installation Information does not include a
		requirement to continue to provide support service, warranty, or updates
		for a work that has been modified or installed by the recipient, or for
		the User Product in which it has been modified or installed.  Access to a
		network may be denied when the modification itself materially and
		adversely affects the operation of the network or violates the rules and
		protocols for communication across the network.&lt;/p&gt;
&lt;p&gt;Corresponding Source conveyed, and Installation Information provided,
		in accord with this section must be in a format that is publicly
		documented (and with an implementation available to the public in
		source code form), and must require no special password or key for
		unpacking, reading or copying.&lt;/p&gt;
&lt;h4&gt;7. Additional Terms.&lt;/h4&gt;
&lt;p&gt;&amp;ldquo;Additional permissions&amp;rdquo; are terms that supplement the terms of this
		License by making exceptions from one or more of its conditions.
		Additional permissions that are applicable to the entire Program shall
		be treated as though they were included in this License, to the extent
		that they are valid under applicable law.  If additional permissions
		apply only to part of the Program, that part may be used separately
		under those permissions, but the entire Program remains governed by
		this License without regard to the additional permissions.&lt;/p&gt;
&lt;p&gt;When you convey a copy of a covered work, you may at your option
		remove any additional permissions from that copy, or from any part of
		it.  (Additional permissions may be written to require their own
		removal in certain cases when you modify the work.)  You may place
		additional permissions on material, added by you to a covered work,
		for which you have or can give appropriate copyright permission.&lt;/p&gt;
&lt;p&gt;Notwithstanding any other provision of this License, for material you
		add to a covered work, you may (if authorized by the copyright holders of
		that material) supplement the terms of this License with terms:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a) Disclaiming warranty or limiting liability differently from the
		    terms of sections 15 and 16 of this License; or&lt;/li&gt;
&lt;li&gt;b) Requiring preservation of specified reasonable legal notices or
		    author attributions in that material or in the Appropriate Legal
		    Notices displayed by works containing it; or&lt;/li&gt;
&lt;li&gt;c) Prohibiting misrepresentation of the origin of that material, or
		    requiring that modified versions of such material be marked in
		    reasonable ways as different from the original version; or&lt;/li&gt;
&lt;li&gt;d) Limiting the use for publicity purposes of names of licensors or
		    authors of the material; or&lt;/li&gt;
&lt;li&gt;e) Declining to grant rights under trademark law for use of some
		    trade names, trademarks, or service marks; or&lt;/li&gt;
&lt;li&gt;f) Requiring indemnification of licensors and authors of that
		    material by anyone who conveys the material (or modified versions of
		    it) with contractual assumptions of liability to the recipient, for
		    any liability that these contractual assumptions directly impose on
		    those licensors and authors.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All other non-permissive additional terms are considered &amp;ldquo;further
		restrictions&amp;rdquo; within the meaning of section 10.  If the Program as you
		received it, or any part of it, contains a notice stating that it is
		governed by this License along with a term that is a further
		restriction, you may remove that term.  If a license document contains
		a further restriction but permits relicensing or conveying under this
		License, you may add to a covered work material governed by the terms
		of that license document, provided that the further restriction does
		not survive such relicensing or conveying.&lt;/p&gt;
&lt;p&gt;If you add terms to a covered work in accord with this section, you
		must place, in the relevant source files, a statement of the
		additional terms that apply to those files, or a notice indicating
		where to find the applicable terms.&lt;/p&gt;
&lt;p&gt;Additional terms, permissive or non-permissive, may be stated in the
		form of a separately written license, or stated as exceptions;
		the above requirements apply either way.&lt;/p&gt;
&lt;h4&gt;8. Termination.&lt;/h4&gt;
&lt;p&gt;You may not propagate or modify a covered work except as expressly
		provided under this License.  Any attempt otherwise to propagate or
		modify it is void, and will automatically terminate your rights under
		this License (including any patent licenses granted under the third
		paragraph of section 11).&lt;/p&gt;
&lt;p&gt;However, if you cease all violation of this License, then your
		license from a particular copyright holder is reinstated (a)
		provisionally, unless and until the copyright holder explicitly and
		finally terminates your license, and (b) permanently, if the copyright
		holder fails to notify you of the violation by some reasonable means
		prior to 60 days after the cessation.&lt;/p&gt;
&lt;p&gt;Moreover, your license from a particular copyright holder is
		reinstated permanently if the copyright holder notifies you of the
		violation by some reasonable means, this is the first time you have
		received notice of violation of this License (for any work) from that
		copyright holder, and you cure the violation prior to 30 days after
		your receipt of the notice.&lt;/p&gt;
&lt;p&gt;Termination of your rights under this section does not terminate the
		licenses of parties who have received copies or rights from you under
		this License.  If your rights have been terminated and not permanently
		reinstated, you do not qualify to receive new licenses for the same
		material under section 10.&lt;/p&gt;
&lt;h4&gt;9. Acceptance Not Required for Having Copies.&lt;/h4&gt;
&lt;p&gt;You are not required to accept this License in order to receive or
		run a copy of the Program.  Ancillary propagation of a covered work
		occurring solely as a consequence of using peer-to-peer transmission
		to receive a copy likewise does not require acceptance.  However,
		nothing other than this License grants you permission to propagate or
		modify any covered work.  These actions infringe copyright if you do
		not accept this License.  Therefore, by modifying or propagating a
		covered work, you indicate your acceptance of this License to do so.&lt;/p&gt;
&lt;h4&gt;10. Automatic Licensing of Downstream Recipients.&lt;/h4&gt;
&lt;p&gt;Each time you convey a covered work, the recipient automatically
		receives a license from the original licensors, to run, modify and
		propagate that work, subject to this License.  You are not responsible
		for enforcing compliance by third parties with this License.&lt;/p&gt;
&lt;p&gt;An &amp;ldquo;entity transaction&amp;rdquo; is a transaction transferring control of an
		organization, or substantially all assets of one, or subdividing an
		organization, or merging organizations.  If propagation of a covered
		work results from an entity transaction, each party to that
		transaction who receives a copy of the work also receives whatever
		licenses to the work the party\&#039;s predecessor in interest had or could
		give under the previous paragraph, plus a right to possession of the
		Corresponding Source of the work from the predecessor in interest, if
		the predecessor has it or can get it with reasonable efforts.&lt;/p&gt;
&lt;p&gt;You may not impose any further restrictions on the exercise of the
		rights granted or affirmed under this License.  For example, you may
		not impose a license fee, royalty, or other charge for exercise of
		rights granted under this License, and you may not initiate litigation
		(including a cross-claim or counterclaim in a lawsuit) alleging that
		any patent claim is infringed by making, using, selling, offering for
		sale, or importing the Program or any portion of it.&lt;/p&gt;
&lt;h4&gt;11. Patents.&lt;/h4&gt;
&lt;p&gt;A &amp;ldquo;contributor&amp;rdquo; is a copyright holder who authorizes use under this
		License of the Program or a work on which the Program is based.  The
		work thus licensed is called the contributor\&#039;s &amp;ldquo;contributor version&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;A contributor\&#039;s &amp;ldquo;essential patent claims&amp;rdquo; are all patent claims
		owned or controlled by the contributor, whether already acquired or
		hereafter acquired, that would be infringed by some manner, permitted
		by this License, of making, using, or selling its contributor version,
		but do not include claims that would be infringed only as a
		consequence of further modification of the contributor version.  For
		purposes of this definition, &amp;ldquo;control&amp;rdquo; includes the right to grant
		patent sublicenses in a manner consistent with the requirements of
		this License.&lt;/p&gt;
&lt;p&gt;Each contributor grants you a non-exclusive, worldwide, royalty-free
		patent license under the contributor\&#039;s essential patent claims, to
		make, use, sell, offer for sale, import and otherwise run, modify and
		propagate the contents of its contributor version.&lt;/p&gt;
&lt;p&gt;In the following three paragraphs, a &amp;ldquo;patent license&amp;rdquo; is any express
		agreement or commitment, however denominated, not to enforce a patent
		(such as an express permission to practice a patent or covenant not to
		sue for patent infringement).  To &amp;ldquo;grant&amp;rdquo; such a patent license to a
		party means to make such an agreement or commitment not to enforce a
		patent against the party.&lt;/p&gt;
&lt;p&gt;If you convey a covered work, knowingly relying on a patent license,
		and the Corresponding Source of the work is not available for anyone
		to copy, free of charge and under the terms of this License, through a
		publicly available network server or other readily accessible means,
		then you must either (1) cause the Corresponding Source to be so
		available, or (2) arrange to deprive yourself of the benefit of the
		patent license for this particular work, or (3) arrange, in a manner
		consistent with the requirements of this License, to extend the patent
		license to downstream recipients.  &amp;ldquo;Knowingly relying&amp;rdquo; means you have
		actual knowledge that, but for the patent license, your conveying the
		covered work in a country, or your recipient\&#039;s use of the covered work
		in a country, would infringe one or more identifiable patents in that
		country that you have reason to believe are valid.&lt;/p&gt;
&lt;p&gt;If, pursuant to or in connection with a single transaction or
		arrangement, you convey, or propagate by procuring conveyance of, a
		covered work, and grant a patent license to some of the parties
		receiving the covered work authorizing them to use, propagate, modify
		or convey a specific copy of the covered work, then the patent license
		you grant is automatically extended to all recipients of the covered
		work and works based on it.&lt;/p&gt;
&lt;p&gt;A patent license is &amp;ldquo;discriminatory&amp;rdquo; if it does not include within
		the scope of its coverage, prohibits the exercise of, or is
		conditioned on the non-exercise of one or more of the rights that are
		specifically granted under this License.  You may not convey a covered
		work if you are a party to an arrangement with a third party that is
		in the business of distributing software, under which you make payment
		to the third party based on the extent of your activity of conveying
		the work, and under which the third party grants, to any of the
		parties who would receive the covered work from you, a discriminatory
		patent license (a) in connection with copies of the covered work
		conveyed by you (or copies made from those copies), or (b) primarily
		for and in connection with specific products or compilations that
		contain the covered work, unless you entered into that arrangement,
		or that patent license was granted, prior to 28 March 2007.&lt;/p&gt;
&lt;p&gt;Nothing in this License shall be construed as excluding or limiting
		any implied license or other defenses to infringement that may
		otherwise be available to you under applicable patent law.&lt;/p&gt;
&lt;h4&gt;12. No Surrender of Others\&#039; Freedom.&lt;/h4&gt;
&lt;p&gt;If conditions are imposed on you (whether by court order, agreement or
		otherwise) that contradict the conditions of this License, they do not
		excuse you from the conditions of this License.  If you cannot convey a
		covered work so as to satisfy simultaneously your obligations under this
		License and any other pertinent obligations, then as a consequence you may
		not convey it at all.  For example, if you agree to terms that obligate you
		to collect a royalty for further conveying from those to whom you convey
		the Program, the only way you could satisfy both those terms and this
		License would be to refrain entirely from conveying the Program.&lt;/p&gt;
&lt;h4&gt;13. Use with the GNU Affero General Public License.&lt;/h4&gt;
&lt;p&gt;Notwithstanding any other provision of this License, you have
		permission to link or combine any covered work with a work licensed
		under version 3 of the GNU Affero General Public License into a single
		combined work, and to convey the resulting work.  The terms of this
		License will continue to apply to the part which is the covered work,
		but the special requirements of the GNU Affero General Public License,
		section 13, concerning interaction through a network will apply to the
		combination as such.&lt;/p&gt;
&lt;h4&gt;14. Revised Versions of this License.&lt;/h4&gt;
&lt;p&gt;The Free Software Foundation may publish revised and/or new versions of
		the GNU General Public License from time to time.  Such new versions will
		be similar in spirit to the present version, but may differ in detail to
		address new problems or concerns.&lt;/p&gt;
&lt;p&gt;Each version is given a distinguishing version number.  If the
		Program specifies that a certain numbered version of the GNU General
		Public License &amp;ldquo;or any later version&amp;rdquo; applies to it, you have the
		option of following the terms and conditions either of that numbered
		version or of any later version published by the Free Software
		Foundation.  If the Program does not specify a version number of the
		GNU General Public License, you may choose any version ever published
		by the Free Software Foundation.&lt;/p&gt;
&lt;p&gt;If the Program specifies that a proxy can decide which future
		versions of the GNU General Public License can be used, that proxy\&#039;s
		public statement of acceptance of a version permanently authorizes you
		to choose that version for the Program.&lt;/p&gt;
&lt;p&gt;Later license versions may give you additional or different
		permissions.  However, no additional obligations are imposed on any
		author or copyright holder as a result of your choosing to follow a
		later version.&lt;/p&gt;
&lt;h4&gt;15. Disclaimer of Warranty.&lt;/h4&gt;
&lt;p&gt;THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY
		APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT
		HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM &amp;ldquo;AS IS&amp;rdquo; WITHOUT WARRANTY
		OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,
		THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
		PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM
		IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF
		ALL NECESSARY SERVICING, REPAIR OR CORRECTION.&lt;/p&gt;
&lt;h4&gt;16. Limitation of Liability.&lt;/h4&gt;
&lt;p&gt;IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
		WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS
		THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY
		GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE
		USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF
		DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD
		PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),
		EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF
		SUCH DAMAGES.&lt;/p&gt;
&lt;h4&gt;17. Interpretation of Sections 15 and 16.&lt;/h4&gt;
&lt;p&gt;If the disclaimer of warranty and limitation of liability provided
		above cannot be given local legal effect according to their terms,
		reviewing courts shall apply local law that most closely approximates
		an absolute waiver of all civil liability in connection with the
		Program, unless a warranty or assumption of liability accompanies a
		copy of the Program in return for a fee.&lt;/p&gt;
&lt;p&gt;END OF TERMS AND CONDITIONS&lt;/p&gt;
&lt;h3&gt;How to Apply These Terms to Your New Programs&lt;/h3&gt;
&lt;p&gt;If you develop a new program, and you want it to be of the greatest
		possible use to the public, the best way to achieve this is to make it
		free software which everyone can redistribute and change under these terms.&lt;/p&gt;
&lt;p&gt;To do so, attach the following notices to the program.  It is safest
		to attach them to the start of each source file to most effectively
		state the exclusion of warranty; and each file should have at least
		the &amp;ldquo;copyright&amp;rdquo; line and a pointer to where the full notice is found.&lt;/p&gt;
&lt;pre&gt;	toendaCMS - Your ideas ahead!
	Copyright (C) 2003 - 2008  Jonathan Naumann - Toenda Software Development
	
	This program is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.
	
	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.
	
	You should have received a copy of the GNU General Public License
	along with this program.  If not, see .
		&lt;/pre&gt;
&lt;p&gt;Also add information on how to contact you by electronic and paper mail.&lt;/p&gt;
&lt;p&gt;If the program does terminal interaction, make it output a short
		notice like this when it starts in an interactive mode:&lt;/p&gt;
&lt;pre&gt;	toendaCMS - Your ideas ahead! Copyright (C) 2003 - 2008  Jonathan Naumann - Toenda Software Development
	
	This program comes with ABSOLUTELY NO WARRANTY; for details type `show w\&#039;.
	This is free software, and you are welcome to redistribute it
	under certain conditions; type `show c\&#039; for details.
		&lt;/pre&gt;
&lt;p&gt;The hypothetical commands `show w\&#039; and `show c\&#039; should show the appropriate
		parts of the General Public License.  Of course, your program\&#039;s commands
		might be different; for a GUI interface, you would use an &amp;ldquo;about box&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;You should also get your employer (if you work as a programmer) or school,
		if any, to sign a &amp;ldquo;copyright disclaimer&amp;rdquo; for the program, if necessary.
		For more information on this, and how to apply and follow the GNU GPL, see
		.&lt;/p&gt;
&lt;p&gt;The GNU General Public License does not permit incorporating your program
		into proprietary programs.  If your program is a subroutine library, you
		may consider it more useful to permit linking proprietary applications with
		the library.  If this is what you want to do, use the GNU Lesser General
		Public License instead of this License.  But first, please read
		.&lt;/p&gt;";</content00>
	<content01>czowOiIiOw==</content01>
	<foot>czowOiIiOw==</foot>
	<id>18e2a</id>
	<access>Public</access>
	<published>1</published>
	<autor>root</autor>
	<in_work>1</in_work>
</main>
